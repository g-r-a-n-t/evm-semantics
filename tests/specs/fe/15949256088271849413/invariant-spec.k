module INVARIANT-SPEC 
    imports VERIFICATION

    claim

    <kevm>
        <k> #execute => #halt </k>
        <exit-code> 1 </exit-code>
        <mode> NORMAL </mode>
        <schedule> ISTANBUL </schedule>

        <ethereum>
            <evm>
                <output> _ => #buf(0, 0) </output>
                <statusCode> _ => EVMC_SUCCESS </statusCode>
                <callStack> _ </callStack>
                <interimStates> _ </interimStates>
                <touchedAccounts> _ => ?_ </touchedAccounts>

                <callState>
                    // todo: gen this part
                    <program> #parseByteStack("0x6100c56020356100b760003560409081519081156100d8575b61005882848082966100c0960180156100d0575b0181526100376102b8565b602381019081156100c7575b81830190925290815260046020820152610336565b6100ae61008061009e610069610319565b95610072610319565b5061008587610080836100e1565b610389565b61008d610319565b928391610098610319565b5061012a565b6100a88184610276565b86610276565b6100b7836102dc565b5160f01c6101ba565b6102dc565b005b60609150610043565b50606061002c565b60609150610018565b6100fa906040518015610122575b6080016040526101ca565b604051908115610119575b816101169160808201604052610389565b90565b60609150610105565b5060606100ef565b610142906040518015610122576080016040526101ca565b6040519081156101b1575b6080820160405280829160005b6004811061019b5750810380608003610174575b50505090565b60016000199160800360031b610100031b019081199051169082511617905238808061016e565b825184526020938401939092019160010161015a565b6060915061014d565b14156001146101c557565b600080fd5b6040805191821561026d575b60209082840183526101e884826103dc565b01518180518015610265575b0190811561025c575b82820183526000825260208201528151908115610253575b816102249184820185526103dc565b815191821561024a575b6102428380956080610116960184526103dc565b8301906103dc565b6060925061022e565b60609150610215565b606091506101fd565b5060606101f4565b606092506101d6565b604080805180156102b0575b01928382528181519480156102a8575b018252019081519160028301905260f01b910152565b506060610292565b506060610282565b6000906040518015806001146102d457156102d05750565b9150565b506060925050565b60408080518015610311575b0191828252818151938015610309575b018252018051600281019091520190565b5060606102f8565b5060606102e8565b60405190811561032d575b60808201604052565b60609150610324565b8060005b60028110610373575081038060400361035257505050565b60016000199160400360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161033a565b8060005b600481106103c657508103806080036103a557505050565b60016000199160800360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161038d565b8060005b600281106103f8575081038060400361035257505050565b82518452602093840193909201916001016103e056") </program>
                    <jumpDests> #computeValidJumpDests(#parseByteStack("0x6100c56020356100b760003560409081519081156100d8575b61005882848082966100c0960180156100d0575b0181526100376102b8565b602381019081156100c7575b81830190925290815260046020820152610336565b6100ae61008061009e610069610319565b95610072610319565b5061008587610080836100e1565b610389565b61008d610319565b928391610098610319565b5061012a565b6100a88184610276565b86610276565b6100b7836102dc565b5160f01c6101ba565b6102dc565b005b60609150610043565b50606061002c565b60609150610018565b6100fa906040518015610122575b6080016040526101ca565b604051908115610119575b816101169160808201604052610389565b90565b60609150610105565b5060606100ef565b610142906040518015610122576080016040526101ca565b6040519081156101b1575b6080820160405280829160005b6004811061019b5750810380608003610174575b50505090565b60016000199160800360031b610100031b019081199051169082511617905238808061016e565b825184526020938401939092019160010161015a565b6060915061014d565b14156001146101c557565b600080fd5b6040805191821561026d575b60209082840183526101e884826103dc565b01518180518015610265575b0190811561025c575b82820183526000825260208201528151908115610253575b816102249184820185526103dc565b815191821561024a575b6102428380956080610116960184526103dc565b8301906103dc565b6060925061022e565b60609150610215565b606091506101fd565b5060606101f4565b606092506101d6565b604080805180156102b0575b01928382528181519480156102a8575b018252019081519160028301905260f01b910152565b506060610292565b506060610282565b6000906040518015806001146102d457156102d05750565b9150565b506060925050565b60408080518015610311575b0191828252818151938015610309575b018252018051600281019091520190565b5060606102f8565b5060606102e8565b60405190811561032d575b60808201604052565b60609150610324565b8060005b60028110610373575081038060400361035257505050565b60016000199160400360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161033a565b8060005b600481106103c657508103806080036103a557505050565b60016000199160800360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161038d565b8060005b600281106103f8575081038060400361035257505050565b82518452602093840193909201916001016103e056")) </jumpDests>

                    <id> ACCT_ID </id> // contract owner
                    <caller> CALLER_ID </caller> // who called this contract; in the beginning, origin // msg.sender

                    // todo: gen this part
                    <callData> #buf(32, ARG_0) +Bytes #buf(32, ARG_1) </callData>

                    <callValue> 0 </callValue>
                    <wordStack> .WordStack => ?_ </wordStack>
                    <localMem> .Bytes => ?_ </localMem>
                    <pc> 0 => ?_ </pc>
                    <gas> #gas(_VGAS) => ?_ </gas>
                    <memoryUsed> 0 => ?_ </memoryUsed>
                    <callGas> _ => ?_ </callGas>

                    <static> false </static> // NOTE: non-static call
                    <callDepth> CALL_DEPTH </callDepth>
                </callState>

                <substate>
                    <selfDestruct> _ </selfDestruct>
                    <log> _ </log>
                    <refund> _ </refund>
                    <accessedAccounts> _ => ?_ </accessedAccounts>
                    <accessedStorage> _ => ?_ </accessedStorage>
                </substate>

                <gasPrice> _ </gasPrice>
                <origin> ORIGIN_ID </origin>

                <blockhashes> _ </blockhashes>
                <block>
                    <previousHash> _ </previousHash>
                    <ommersHash> _ </ommersHash>
                    <coinbase> _ </coinbase>
                    <stateRoot> _ </stateRoot>
                    <transactionsRoot> _ </transactionsRoot>
                    <receiptsRoot> _ </receiptsRoot>
                    <logsBloom> _ </logsBloom>
                    <difficulty> _ </difficulty>
                    <number> _ </number>
                    <gasLimit> _ </gasLimit>
                    <gasUsed> _ </gasUsed>
                    <timestamp> _ </timestamp>
                    <extraData> _ </extraData>
                    <mixHash> _ </mixHash>
                    <blockNonce> _ </blockNonce>
                    <ommerBlockHeaders> _ </ommerBlockHeaders>
                    <baseFee> _ </baseFee>
                </block>
            </evm>

            <network>
                <chainID> _ </chainID>

                <activeAccounts> SetItem(ACCT_ID) _:Set </activeAccounts>

                <accounts>
                    <account>
                        <acctID> ACCT_ID </acctID>
                        <balance> _ </balance>
                        <code> #parseByteStack("0x6100c56020356100b760003560409081519081156100d8575b61005882848082966100c0960180156100d0575b0181526100376102b8565b602381019081156100c7575b81830190925290815260046020820152610336565b6100ae61008061009e610069610319565b95610072610319565b5061008587610080836100e1565b610389565b61008d610319565b928391610098610319565b5061012a565b6100a88184610276565b86610276565b6100b7836102dc565b5160f01c6101ba565b6102dc565b005b60609150610043565b50606061002c565b60609150610018565b6100fa906040518015610122575b6080016040526101ca565b604051908115610119575b816101169160808201604052610389565b90565b60609150610105565b5060606100ef565b610142906040518015610122576080016040526101ca565b6040519081156101b1575b6080820160405280829160005b6004811061019b5750810380608003610174575b50505090565b60016000199160800360031b610100031b019081199051169082511617905238808061016e565b825184526020938401939092019160010161015a565b6060915061014d565b14156001146101c557565b600080fd5b6040805191821561026d575b60209082840183526101e884826103dc565b01518180518015610265575b0190811561025c575b82820183526000825260208201528151908115610253575b816102249184820185526103dc565b815191821561024a575b6102428380956080610116960184526103dc565b8301906103dc565b6060925061022e565b60609150610215565b606091506101fd565b5060606101f4565b606092506101d6565b604080805180156102b0575b01928382528181519480156102a8575b018252019081519160028301905260f01b910152565b506060610292565b506060610282565b6000906040518015806001146102d457156102d05750565b9150565b506060925050565b60408080518015610311575b0191828252818151938015610309575b018252018051600281019091520190565b5060606102f8565b5060606102e8565b60405190811561032d575b60808201604052565b60609150610324565b8060005b60028110610373575081038060400361035257505050565b60016000199160400360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161033a565b8060005b600481106103c657508103806080036103a557505050565b60016000199160800360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161038d565b8060005b600281106103f8575081038060400361035257505050565b82518452602093840193909201916001016103e056") </code>
                        <storage> _ </storage>
                        <origStorage> _ </origStorage>
                        <nonce> _ </nonce>
                    </account>
                </accounts>

                <txOrder> _ </txOrder>
                <txPending> _ </txPending>
                <messages> _ </messages>
            </network>
        </ethereum>
    </kevm>

    requires 0 <=Int ACCT_ID    andBool ACCT_ID    <Int (2 ^Int 160)
        andBool 0  <=Int CALLER_ID  andBool CALLER_ID  <Int (2 ^Int 160)
        andBool 0  <=Int ORIGIN_ID  andBool ORIGIN_ID  <Int (2 ^Int 160)
        andBool 0  <=Int CALL_DEPTH andBool CALL_DEPTH <Int 1024
        andBool 0 <=Int ARG_0 andBool ARG_0 <Int (2 ^Int 16)
andBool 0 <=Int ARG_1 andBool ARG_1 <Int (2 ^Int 16)

endmodule

