module INVARIANT-SPEC 
    imports VERIFICATION

    claim

    <kevm>
        <k> #execute => #halt </k>
        <exit-code> 1 </exit-code>
        <mode> NORMAL </mode>
        <schedule> ISTANBUL </schedule>

        <ethereum>
            <evm>
                <output> _ => #buf(0, 0) </output>
                <statusCode> _ => EVMC_SUCCESS </statusCode>
                <callStack> _ </callStack>
                <interimStates> _ </interimStates>
                <touchedAccounts> _ => ?_ </touchedAccounts>

                <callState>
                    // todo: gen this part
                    <program> #parseByteStack("0x6100ed6060356100df604035602035600035916040519182156100f7575b6100d6906100c4849560406100e8960180156100ef575b60400160405261004b87610046610100565b6103ca565b6100b58961007461009261005d6103ad565b9a6100666103ad565b506100798c61007483610130565b61041d565b6100816103ad565b92839161008c6103ad565b50610130565b61009c8482610267565b6100a68682610273565b6100b0888261027f565b61027f565b6100be876102d2565b516102c2565b6100cd8561030f565b5160f81c6102c2565b6100df8361034c565b5160801c6102c2565b61034c565b005b506060610034565b6060925061001d565b610108610389565b60608101908115610127575b6040820160405281526040602082015290565b60609150610114565b6040908151801561025f575b608001908115610256575b828201835261015682826103ca565b602080910151838051801561024e575b01908115610245575b84820185526000825282820152835190811561023c575b816101959186820187526103ca565b8351928315610233575b836101af916080820187526103ca565b80848401926000905b6002821061021c57505081038085036101f6575b50505081519182156101ed575b6101ea91839160808301905261041d565b90565b606092506101d9565b600160001991860360031b610100031b01908119905116908251161790523880806101cc565b9093928180826001935187520194019401906101b8565b6060935061019f565b60609150610186565b6060915061016f565b506060610166565b60609150610147565b50606061013c565b610270906102d2565b52565b61027c9061030f565b53565b90604080805180156102ba575b01928382528181519480156102b2575b018252019081519160108301905260801c910152565b50606061029c565b50606061028c565b14156001146102cd57565b600080fd5b60408080518015610307575b01918282528181519380156102ff575b018252018051602081019091520190565b5060606102ee565b5060606102de565b60408080518015610344575b019182825281815193801561033c575b018252018051600181019091520190565b50606061032b565b50606061031b565b60408080518015610381575b0191828252818151938015610379575b018252018051601081019091520190565b506060610368565b506060610358565b6000906040518015806001146103a557156103a15750565b9150565b506060925050565b6040519081156103c1575b60808201604052565b606091506103b8565b8060005b6002811061040757508103806040036103e657505050565b60016000199160400360031b610100031b0190811990511690825116179052565b82518452602093840193909201916001016103ce565b8060005b6004811061045a575081038060800361043957505050565b60016000199160800360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161042156") </program>
                    <jumpDests> #computeValidJumpDests(#parseByteStack("0x6100ed6060356100df604035602035600035916040519182156100f7575b6100d6906100c4849560406100e8960180156100ef575b60400160405261004b87610046610100565b6103ca565b6100b58961007461009261005d6103ad565b9a6100666103ad565b506100798c61007483610130565b61041d565b6100816103ad565b92839161008c6103ad565b50610130565b61009c8482610267565b6100a68682610273565b6100b0888261027f565b61027f565b6100be876102d2565b516102c2565b6100cd8561030f565b5160f81c6102c2565b6100df8361034c565b5160801c6102c2565b61034c565b005b506060610034565b6060925061001d565b610108610389565b60608101908115610127575b6040820160405281526040602082015290565b60609150610114565b6040908151801561025f575b608001908115610256575b828201835261015682826103ca565b602080910151838051801561024e575b01908115610245575b84820185526000825282820152835190811561023c575b816101959186820187526103ca565b8351928315610233575b836101af916080820187526103ca565b80848401926000905b6002821061021c57505081038085036101f6575b50505081519182156101ed575b6101ea91839160808301905261041d565b90565b606092506101d9565b600160001991860360031b610100031b01908119905116908251161790523880806101cc565b9093928180826001935187520194019401906101b8565b6060935061019f565b60609150610186565b6060915061016f565b506060610166565b60609150610147565b50606061013c565b610270906102d2565b52565b61027c9061030f565b53565b90604080805180156102ba575b01928382528181519480156102b2575b018252019081519160108301905260801c910152565b50606061029c565b50606061028c565b14156001146102cd57565b600080fd5b60408080518015610307575b01918282528181519380156102ff575b018252018051602081019091520190565b5060606102ee565b5060606102de565b60408080518015610344575b019182825281815193801561033c575b018252018051600181019091520190565b50606061032b565b50606061031b565b60408080518015610381575b0191828252818151938015610379575b018252018051601081019091520190565b506060610368565b506060610358565b6000906040518015806001146103a557156103a15750565b9150565b506060925050565b6040519081156103c1575b60808201604052565b606091506103b8565b8060005b6002811061040757508103806040036103e657505050565b60016000199160400360031b610100031b0190811990511690825116179052565b82518452602093840193909201916001016103ce565b8060005b6004811061045a575081038060800361043957505050565b60016000199160800360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161042156")) </jumpDests>

                    <id> ACCT_ID </id> // contract owner
                    <caller> CALLER_ID </caller> // who called this contract; in the beginning, origin // msg.sender

                    // todo: gen this part
                    <callData> #buf(32, ARG_0) +Bytes #buf(32, ARG_1) +Bytes #buf(32, ARG_2) +Bytes #buf(32, ARG_3) </callData>

                    <callValue> 0 </callValue>
                    <wordStack> .WordStack => ?_ </wordStack>
                    <localMem> .Bytes => ?_ </localMem>
                    <pc> 0 => ?_ </pc>
                    <gas> #gas(_VGAS) => ?_ </gas>
                    <memoryUsed> 0 => ?_ </memoryUsed>
                    <callGas> _ => ?_ </callGas>

                    <static> false </static> // NOTE: non-static call
                    <callDepth> CALL_DEPTH </callDepth>
                </callState>

                <substate>
                    <selfDestruct> _ </selfDestruct>
                    <log> _ </log>
                    <refund> _ </refund>
                    <accessedAccounts> _ => ?_ </accessedAccounts>
                    <accessedStorage> _ => ?_ </accessedStorage>
                </substate>

                <gasPrice> _ </gasPrice>
                <origin> ORIGIN_ID </origin>

                <blockhashes> _ </blockhashes>
                <block>
                    <previousHash> _ </previousHash>
                    <ommersHash> _ </ommersHash>
                    <coinbase> _ </coinbase>
                    <stateRoot> _ </stateRoot>
                    <transactionsRoot> _ </transactionsRoot>
                    <receiptsRoot> _ </receiptsRoot>
                    <logsBloom> _ </logsBloom>
                    <difficulty> _ </difficulty>
                    <number> _ </number>
                    <gasLimit> _ </gasLimit>
                    <gasUsed> _ </gasUsed>
                    <timestamp> _ </timestamp>
                    <extraData> _ </extraData>
                    <mixHash> _ </mixHash>
                    <blockNonce> _ </blockNonce>
                    <ommerBlockHeaders> _ </ommerBlockHeaders>
                    <baseFee> _ </baseFee>
                </block>
            </evm>

            <network>
                <chainID> _ </chainID>

                <activeAccounts> SetItem(ACCT_ID) _:Set </activeAccounts>

                <accounts>
                    <account>
                        <acctID> ACCT_ID </acctID>
                        <balance> _ </balance>
                        <code> #parseByteStack("0x6100ed6060356100df604035602035600035916040519182156100f7575b6100d6906100c4849560406100e8960180156100ef575b60400160405261004b87610046610100565b6103ca565b6100b58961007461009261005d6103ad565b9a6100666103ad565b506100798c61007483610130565b61041d565b6100816103ad565b92839161008c6103ad565b50610130565b61009c8482610267565b6100a68682610273565b6100b0888261027f565b61027f565b6100be876102d2565b516102c2565b6100cd8561030f565b5160f81c6102c2565b6100df8361034c565b5160801c6102c2565b61034c565b005b506060610034565b6060925061001d565b610108610389565b60608101908115610127575b6040820160405281526040602082015290565b60609150610114565b6040908151801561025f575b608001908115610256575b828201835261015682826103ca565b602080910151838051801561024e575b01908115610245575b84820185526000825282820152835190811561023c575b816101959186820187526103ca565b8351928315610233575b836101af916080820187526103ca565b80848401926000905b6002821061021c57505081038085036101f6575b50505081519182156101ed575b6101ea91839160808301905261041d565b90565b606092506101d9565b600160001991860360031b610100031b01908119905116908251161790523880806101cc565b9093928180826001935187520194019401906101b8565b6060935061019f565b60609150610186565b6060915061016f565b506060610166565b60609150610147565b50606061013c565b610270906102d2565b52565b61027c9061030f565b53565b90604080805180156102ba575b01928382528181519480156102b2575b018252019081519160108301905260801c910152565b50606061029c565b50606061028c565b14156001146102cd57565b600080fd5b60408080518015610307575b01918282528181519380156102ff575b018252018051602081019091520190565b5060606102ee565b5060606102de565b60408080518015610344575b019182825281815193801561033c575b018252018051600181019091520190565b50606061032b565b50606061031b565b60408080518015610381575b0191828252818151938015610379575b018252018051601081019091520190565b506060610368565b506060610358565b6000906040518015806001146103a557156103a15750565b9150565b506060925050565b6040519081156103c1575b60808201604052565b606091506103b8565b8060005b6002811061040757508103806040036103e657505050565b60016000199160400360031b610100031b0190811990511690825116179052565b82518452602093840193909201916001016103ce565b8060005b6004811061045a575081038060800361043957505050565b60016000199160800360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161042156") </code>
                        <storage> _ </storage>
                        <origStorage> _ </origStorage>
                        <nonce> _ </nonce>
                    </account>
                </accounts>

                <txOrder> _ </txOrder>
                <txPending> _ </txPending>
                <messages> _ </messages>
            </network>
        </ethereum>
    </kevm>

    requires 0 <=Int ACCT_ID    andBool ACCT_ID    <Int (2 ^Int 160)
        andBool 0  <=Int CALLER_ID  andBool CALLER_ID  <Int (2 ^Int 160)
        andBool 0  <=Int ORIGIN_ID  andBool ORIGIN_ID  <Int (2 ^Int 160)
        andBool 0  <=Int CALL_DEPTH andBool CALL_DEPTH <Int 1024
        andBool 0 <=Int ARG_0 andBool ARG_0 <Int (2 ^Int 256)
andBool 0 <=Int ARG_1 andBool ARG_1 <Int (2 ^Int 8)
andBool 0 <=Int ARG_2 andBool ARG_2 <Int (2 ^Int 128)
andBool 0 <=Int ARG_3 andBool ARG_3 <Int (2 ^Int 128)

endmodule

