module INVARIANT-SPEC 
    imports VERIFICATION

    claim

    <kevm>
        <k> #execute => #halt </k>
        <exit-code> 1 </exit-code>
        <mode> NORMAL </mode>
        <schedule> ISTANBUL </schedule>

        <ethereum>
            <evm>
                <output> _ => #buf(0, 0) </output>
                <statusCode> _ => EVMC_SUCCESS </statusCode>
                <callStack> _ </callStack>
                <interimStates> _ </interimStates>
                <touchedAccounts> _ => ?_ </touchedAccounts>

                <callState>
                    // todo: gen this part
                    <program> #parseByteStack("0x6100d060006100c28151828052602051928060205260409182519182156100e3575b8284610063928183976100cb970180156100db575b0182526100416102c3565b602f8101915081156100d2575b81830190925290815260106020820152610341565b6100b961008b6100a9610074610324565b9561007d610324565b506100908761008b836100ec565b610394565b610098610324565b9283916100a3610324565b50610135565b6100b38184610281565b86610281565b6100c2836102e7565b5160f81c6101c5565b6102e7565b005b6060915061004e565b506060610036565b60609250610021565b61010590604051801561012d575b6080016040526101d5565b604051908115610124575b816101219160808201604052610394565b90565b60609150610110565b5060606100fa565b61014d90604051801561012d576080016040526101d5565b6040519081156101bc575b6080820160405280829160005b600481106101a6575081038060800361017f575b50505090565b60016000199160800360031b610100031b0190811990511690825116179052388080610179565b8251845260209384019390920191600101610165565b60609150610158565b14156001146101d057565b600080fd5b60408051918215610278575b60209082840183526101f384826103e7565b01518180518015610270575b01908115610267575b8282018352600082526020820152815190811561025e575b8161022f9184820185526103e7565b8151918215610255575b61024d8380956080610121960184526103e7565b8301906103e7565b60609250610239565b60609150610220565b60609150610208565b5060606101ff565b606092506101e1565b604080805180156102bb575b01928382528181519480156102b3575b018252019081519160018301905260f81b910152565b50606061029d565b50606061028d565b6000906040518015806001146102df57156102db5750565b9150565b506060925050565b6040808051801561031c575b0191828252818151938015610314575b018252018051600181019091520190565b506060610303565b5060606102f3565b604051908115610338575b60808201604052565b6060915061032f565b8060005b6002811061037e575081038060400361035d57505050565b60016000199160400360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610345565b8060005b600481106103d157508103806080036103b057505050565b60016000199160800360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610398565b8060005b60028110610403575081038060400361035d57505050565b82518452602093840193909201916001016103eb56") </program>
                    <jumpDests> #computeValidJumpDests(#parseByteStack("0x6100d060006100c28151828052602051928060205260409182519182156100e3575b8284610063928183976100cb970180156100db575b0182526100416102c3565b602f8101915081156100d2575b81830190925290815260106020820152610341565b6100b961008b6100a9610074610324565b9561007d610324565b506100908761008b836100ec565b610394565b610098610324565b9283916100a3610324565b50610135565b6100b38184610281565b86610281565b6100c2836102e7565b5160f81c6101c5565b6102e7565b005b6060915061004e565b506060610036565b60609250610021565b61010590604051801561012d575b6080016040526101d5565b604051908115610124575b816101219160808201604052610394565b90565b60609150610110565b5060606100fa565b61014d90604051801561012d576080016040526101d5565b6040519081156101bc575b6080820160405280829160005b600481106101a6575081038060800361017f575b50505090565b60016000199160800360031b610100031b0190811990511690825116179052388080610179565b8251845260209384019390920191600101610165565b60609150610158565b14156001146101d057565b600080fd5b60408051918215610278575b60209082840183526101f384826103e7565b01518180518015610270575b01908115610267575b8282018352600082526020820152815190811561025e575b8161022f9184820185526103e7565b8151918215610255575b61024d8380956080610121960184526103e7565b8301906103e7565b60609250610239565b60609150610220565b60609150610208565b5060606101ff565b606092506101e1565b604080805180156102bb575b01928382528181519480156102b3575b018252019081519160018301905260f81b910152565b50606061029d565b50606061028d565b6000906040518015806001146102df57156102db5750565b9150565b506060925050565b6040808051801561031c575b0191828252818151938015610314575b018252018051600181019091520190565b506060610303565b5060606102f3565b604051908115610338575b60808201604052565b6060915061032f565b8060005b6002811061037e575081038060400361035d57505050565b60016000199160400360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610345565b8060005b600481106103d157508103806080036103b057505050565b60016000199160800360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610398565b8060005b60028110610403575081038060400361035d57505050565b82518452602093840193909201916001016103eb56")) </jumpDests>

                    <id> ACCT_ID </id> // contract owner
                    <caller> CALLER_ID </caller> // who called this contract; in the beginning, origin // msg.sender

                    // todo: gen this part
                    <callData> #buf(32, ARG_0) +Bytes #buf(32, ARG_1) </callData>

                    <callValue> 0 </callValue>
                    <wordStack> .WordStack => ?_ </wordStack>
                    <localMem> .Bytes => ?_ </localMem>
                    <pc> 0 => ?_ </pc>
                    <gas> #gas(_VGAS) => ?_ </gas>
                    <memoryUsed> 0 => ?_ </memoryUsed>
                    <callGas> _ => ?_ </callGas>

                    <static> false </static> // NOTE: non-static call
                    <callDepth> CALL_DEPTH </callDepth>
                </callState>

                <substate>
                    <selfDestruct> _ </selfDestruct>
                    <log> _ </log>
                    <refund> _ </refund>
                    <accessedAccounts> _ => ?_ </accessedAccounts>
                    <accessedStorage> _ => ?_ </accessedStorage>
                </substate>

                <gasPrice> _ </gasPrice>
                <origin> ORIGIN_ID </origin>

                <blockhashes> _ </blockhashes>
                <block>
                    <previousHash> _ </previousHash>
                    <ommersHash> _ </ommersHash>
                    <coinbase> _ </coinbase>
                    <stateRoot> _ </stateRoot>
                    <transactionsRoot> _ </transactionsRoot>
                    <receiptsRoot> _ </receiptsRoot>
                    <logsBloom> _ </logsBloom>
                    <difficulty> _ </difficulty>
                    <number> _ </number>
                    <gasLimit> _ </gasLimit>
                    <gasUsed> _ </gasUsed>
                    <timestamp> _ </timestamp>
                    <extraData> _ </extraData>
                    <mixHash> _ </mixHash>
                    <blockNonce> _ </blockNonce>
                    <ommerBlockHeaders> _ </ommerBlockHeaders>
                    <baseFee> _ </baseFee>
                </block>
            </evm>

            <network>
                <chainID> _ </chainID>

                <activeAccounts> SetItem(ACCT_ID) _:Set </activeAccounts>

                <accounts>
                    <account>
                        <acctID> ACCT_ID </acctID>
                        <balance> _ </balance>
                        <code> #parseByteStack("0x6100d060006100c28151828052602051928060205260409182519182156100e3575b8284610063928183976100cb970180156100db575b0182526100416102c3565b602f8101915081156100d2575b81830190925290815260106020820152610341565b6100b961008b6100a9610074610324565b9561007d610324565b506100908761008b836100ec565b610394565b610098610324565b9283916100a3610324565b50610135565b6100b38184610281565b86610281565b6100c2836102e7565b5160f81c6101c5565b6102e7565b005b6060915061004e565b506060610036565b60609250610021565b61010590604051801561012d575b6080016040526101d5565b604051908115610124575b816101219160808201604052610394565b90565b60609150610110565b5060606100fa565b61014d90604051801561012d576080016040526101d5565b6040519081156101bc575b6080820160405280829160005b600481106101a6575081038060800361017f575b50505090565b60016000199160800360031b610100031b0190811990511690825116179052388080610179565b8251845260209384019390920191600101610165565b60609150610158565b14156001146101d057565b600080fd5b60408051918215610278575b60209082840183526101f384826103e7565b01518180518015610270575b01908115610267575b8282018352600082526020820152815190811561025e575b8161022f9184820185526103e7565b8151918215610255575b61024d8380956080610121960184526103e7565b8301906103e7565b60609250610239565b60609150610220565b60609150610208565b5060606101ff565b606092506101e1565b604080805180156102bb575b01928382528181519480156102b3575b018252019081519160018301905260f81b910152565b50606061029d565b50606061028d565b6000906040518015806001146102df57156102db5750565b9150565b506060925050565b6040808051801561031c575b0191828252818151938015610314575b018252018051600181019091520190565b506060610303565b5060606102f3565b604051908115610338575b60808201604052565b6060915061032f565b8060005b6002811061037e575081038060400361035d57505050565b60016000199160400360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610345565b8060005b600481106103d157508103806080036103b057505050565b60016000199160800360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610398565b8060005b60028110610403575081038060400361035d57505050565b82518452602093840193909201916001016103eb56") </code>
                        <storage> _ </storage>
                        <origStorage> _ </origStorage>
                        <nonce> _ </nonce>
                    </account>
                </accounts>

                <txOrder> _ </txOrder>
                <txPending> _ </txPending>
                <messages> _ </messages>
            </network>
        </ethereum>
    </kevm>

    requires 0 <=Int ACCT_ID    andBool ACCT_ID    <Int (2 ^Int 160)
        andBool 0  <=Int CALLER_ID  andBool CALLER_ID  <Int (2 ^Int 160)
        andBool 0  <=Int ORIGIN_ID  andBool ORIGIN_ID  <Int (2 ^Int 160)
        andBool 0  <=Int CALL_DEPTH andBool CALL_DEPTH <Int 1024
        andBool 0 <=Int ARG_0 andBool ARG_0 <Int (2 ^Int 8)
andBool 0 <=Int ARG_1 andBool ARG_1 <Int (2 ^Int 8)

endmodule

