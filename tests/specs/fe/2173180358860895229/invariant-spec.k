module INVARIANT-SPEC 
    imports VERIFICATION

    claim

    <kevm>
        <k> #execute => #halt </k>
        <exit-code> 1 </exit-code>
        <mode> NORMAL </mode>
        <schedule> ISTANBUL </schedule>

        <ethereum>
            <evm>
                <output> _ => #buf(0, 0) </output>
                <statusCode> _ => EVMC_SUCCESS </statusCode>
                <callStack> _ </callStack>
                <interimStates> _ </interimStates>
                <touchedAccounts> _ => ?_ </touchedAccounts>

                <callState>
                    // todo: gen this part
                    <program> #parseByteStack("0x602035600035906040805180156100e6575b8180820180156100de575b01825261002761023b565b60041981116100d9576100ce94610061836100c0958460046100c996019081156100d0575b81830190925290815260046020820152610336565b6100b76100896100a7610072610319565b9561007b610319565b5061008e87610089836100ee565b610389565b610096610319565b9283916100a1610319565b506100ee565b6100b181846101e5565b866101e5565b6100c08361025f565b5160f01c6101d5565b61025f565b005b6060915061004c565b61040e565b50606061001c565b506060610011565b604090815180156101cd575b6080019081156101c4575b60209083830184526101178382610336565b015182805180156101bc575b019081156101b3575b838201845260008252602082015282519081156101aa575b81610153918582018652610336565b82519081156101a1575b610171828094608061017a950187526103dc565b838301906103dc565b8151918215610198575b610195918391608083019052610389565b90565b60609250610184565b6060915061015d565b60609150610144565b6060915061012c565b506060610123565b60609150610105565b5060606100fa565b14156001146101e057565b600080fd5b9061020e60408080518015610233575b019283825281815194801561022b575b01825201610292565b90811981116100d957019060f01b815160018060f01b0316179052565b506060610205565b5060606101f5565b60009060405180158060011461025757156102535750565b9150565b506060925050565b6102856040808051801561023357019283825281815194801561022b5701825201610292565b90811981116100d9570190565b906000918051600219918282116100d957602081015160011981116100d95760010160028301109283600114610302575050506000146102ce57565b60405180156102fa575b80516001600160e01b0316634e487b7160e01b17815260016004820152602490fd5b5060606102d8565b91939450809250519081116100d957600201905290565b60405190811561032d575b60808201604052565b60609150610324565b8060005b60028110610373575081038060400361035257505050565b60016000199160400360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161033a565b8060005b600481106103c657508103806080036103a557505050565b60016000199160800360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161038d565b8060005b600281106103f8575081038060400361035257505050565b82518452602093840193909201916001016103e0565b604051801561043a575b80516001600160e01b0316634e487b7160e01b17815260116004820152602490fd5b50606061041856") </program>
                    <jumpDests> #computeValidJumpDests(#parseByteStack("0x602035600035906040805180156100e6575b8180820180156100de575b01825261002761023b565b60041981116100d9576100ce94610061836100c0958460046100c996019081156100d0575b81830190925290815260046020820152610336565b6100b76100896100a7610072610319565b9561007b610319565b5061008e87610089836100ee565b610389565b610096610319565b9283916100a1610319565b506100ee565b6100b181846101e5565b866101e5565b6100c08361025f565b5160f01c6101d5565b61025f565b005b6060915061004c565b61040e565b50606061001c565b506060610011565b604090815180156101cd575b6080019081156101c4575b60209083830184526101178382610336565b015182805180156101bc575b019081156101b3575b838201845260008252602082015282519081156101aa575b81610153918582018652610336565b82519081156101a1575b610171828094608061017a950187526103dc565b838301906103dc565b8151918215610198575b610195918391608083019052610389565b90565b60609250610184565b6060915061015d565b60609150610144565b6060915061012c565b506060610123565b60609150610105565b5060606100fa565b14156001146101e057565b600080fd5b9061020e60408080518015610233575b019283825281815194801561022b575b01825201610292565b90811981116100d957019060f01b815160018060f01b0316179052565b506060610205565b5060606101f5565b60009060405180158060011461025757156102535750565b9150565b506060925050565b6102856040808051801561023357019283825281815194801561022b5701825201610292565b90811981116100d9570190565b906000918051600219918282116100d957602081015160011981116100d95760010160028301109283600114610302575050506000146102ce57565b60405180156102fa575b80516001600160e01b0316634e487b7160e01b17815260016004820152602490fd5b5060606102d8565b91939450809250519081116100d957600201905290565b60405190811561032d575b60808201604052565b60609150610324565b8060005b60028110610373575081038060400361035257505050565b60016000199160400360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161033a565b8060005b600481106103c657508103806080036103a557505050565b60016000199160800360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161038d565b8060005b600281106103f8575081038060400361035257505050565b82518452602093840193909201916001016103e0565b604051801561043a575b80516001600160e01b0316634e487b7160e01b17815260116004820152602490fd5b50606061041856")) </jumpDests>

                    <id> ACCT_ID </id> // contract owner
                    <caller> CALLER_ID </caller> // who called this contract; in the beginning, origin // msg.sender

                    // todo: gen this part
                    <callData> #buf(32, ARG_0) +Bytes #buf(32, ARG_1) </callData>

                    <callValue> 0 </callValue>
                    <wordStack> .WordStack => ?_ </wordStack>
                    <localMem> .Bytes => ?_ </localMem>
                    <pc> 0 => ?_ </pc>
                    <gas> #gas(_VGAS) => ?_ </gas>
                    <memoryUsed> 0 => ?_ </memoryUsed>
                    <callGas> _ => ?_ </callGas>

                    <static> false </static> // NOTE: non-static call
                    <callDepth> CALL_DEPTH </callDepth>
                </callState>

                <substate>
                    <selfDestruct> _ </selfDestruct>
                    <log> _ </log>
                    <refund> _ </refund>
                    <accessedAccounts> _ => ?_ </accessedAccounts>
                    <accessedStorage> _ => ?_ </accessedStorage>
                </substate>

                <gasPrice> _ </gasPrice>
                <origin> ORIGIN_ID </origin>

                <blockhashes> _ </blockhashes>
                <block>
                    <previousHash> _ </previousHash>
                    <ommersHash> _ </ommersHash>
                    <coinbase> _ </coinbase>
                    <stateRoot> _ </stateRoot>
                    <transactionsRoot> _ </transactionsRoot>
                    <receiptsRoot> _ </receiptsRoot>
                    <logsBloom> _ </logsBloom>
                    <difficulty> _ </difficulty>
                    <number> _ </number>
                    <gasLimit> _ </gasLimit>
                    <gasUsed> _ </gasUsed>
                    <timestamp> _ </timestamp>
                    <extraData> _ </extraData>
                    <mixHash> _ </mixHash>
                    <blockNonce> _ </blockNonce>
                    <ommerBlockHeaders> _ </ommerBlockHeaders>
                    <baseFee> _ </baseFee>
                </block>
            </evm>

            <network>
                <chainID> _ </chainID>

                <activeAccounts> SetItem(ACCT_ID) _:Set </activeAccounts>

                <accounts>
                    <account>
                        <acctID> ACCT_ID </acctID>
                        <balance> _ </balance>
                        <code> #parseByteStack("0x602035600035906040805180156100e6575b8180820180156100de575b01825261002761023b565b60041981116100d9576100ce94610061836100c0958460046100c996019081156100d0575b81830190925290815260046020820152610336565b6100b76100896100a7610072610319565b9561007b610319565b5061008e87610089836100ee565b610389565b610096610319565b9283916100a1610319565b506100ee565b6100b181846101e5565b866101e5565b6100c08361025f565b5160f01c6101d5565b61025f565b005b6060915061004c565b61040e565b50606061001c565b506060610011565b604090815180156101cd575b6080019081156101c4575b60209083830184526101178382610336565b015182805180156101bc575b019081156101b3575b838201845260008252602082015282519081156101aa575b81610153918582018652610336565b82519081156101a1575b610171828094608061017a950187526103dc565b838301906103dc565b8151918215610198575b610195918391608083019052610389565b90565b60609250610184565b6060915061015d565b60609150610144565b6060915061012c565b506060610123565b60609150610105565b5060606100fa565b14156001146101e057565b600080fd5b9061020e60408080518015610233575b019283825281815194801561022b575b01825201610292565b90811981116100d957019060f01b815160018060f01b0316179052565b506060610205565b5060606101f5565b60009060405180158060011461025757156102535750565b9150565b506060925050565b6102856040808051801561023357019283825281815194801561022b5701825201610292565b90811981116100d9570190565b906000918051600219918282116100d957602081015160011981116100d95760010160028301109283600114610302575050506000146102ce57565b60405180156102fa575b80516001600160e01b0316634e487b7160e01b17815260016004820152602490fd5b5060606102d8565b91939450809250519081116100d957600201905290565b60405190811561032d575b60808201604052565b60609150610324565b8060005b60028110610373575081038060400361035257505050565b60016000199160400360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161033a565b8060005b600481106103c657508103806080036103a557505050565b60016000199160800360031b610100031b0190811990511690825116179052565b825184526020938401939092019160010161038d565b8060005b600281106103f8575081038060400361035257505050565b82518452602093840193909201916001016103e0565b604051801561043a575b80516001600160e01b0316634e487b7160e01b17815260116004820152602490fd5b50606061041856") </code>
                        <storage> _ </storage>
                        <origStorage> _ </origStorage>
                        <nonce> _ </nonce>
                    </account>
                </accounts>

                <txOrder> _ </txOrder>
                <txPending> _ </txPending>
                <messages> _ </messages>
            </network>
        </ethereum>
    </kevm>

    requires 0 <=Int ACCT_ID    andBool ACCT_ID    <Int (2 ^Int 160)
        andBool 0  <=Int CALLER_ID  andBool CALLER_ID  <Int (2 ^Int 160)
        andBool 0  <=Int ORIGIN_ID  andBool ORIGIN_ID  <Int (2 ^Int 160)
        andBool 0  <=Int CALL_DEPTH andBool CALL_DEPTH <Int 1024
        andBool 0 <=Int ARG_0 andBool ARG_0 <Int (2 ^Int 16)
andBool 0 <=Int ARG_1 andBool ARG_1 <Int (2 ^Int 16)

endmodule

