module INVARIANT-SPEC 
    imports VERIFICATION

    claim

    <kevm>
        <k> #execute => #halt </k>
        <exit-code> 1 </exit-code>
        <mode> NORMAL </mode>
        <schedule> ISTANBUL </schedule>

        <ethereum>
            <evm>
                <output> _ => #buf(0, 0) </output>
                <statusCode> _ => EVMC_SUCCESS </statusCode>
                <callStack> _ </callStack>
                <interimStates> _ </interimStates>
                <touchedAccounts> _ => ?_ </touchedAccounts>

                <callState>
                    // todo: gen this part
                    <program> #parseByteStack("0x60408051602035916060359160003582358215610123575b83808401801561011b575b01845261002d61035d565b60401981116101165761010b966100e26101069461006987858a6100fd9b6100f4980191821561010d575b8183018252825260208201526104c9565b6100d36100916100af61007a6104ac565b996100836104ac565b506100968b6100918361012c565b61051c565b61009e6104ac565b9283916100a96104ac565b5061012c565b6100b98184610223565b6100c38186610230565b6100cd8188610276565b8a610276565b6100dc876102cc565b51610213565b6100eb85610311565b5160f81c610213565b6100fd83610337565b5160801c610213565b610337565b005b60609250610058565b6105d3565b506060610022565b60609250610017565b6040908151801561020b575b608001908115610202575b602090838301845261015583826105a1565b015182805180156101fa575b019081156101f1575b838201845260008252602082015282519081156101e8575b816101919185820186526105a1565b82519081156101df575b6101af82809460806101b8950187526105a1565b838301906105a1565b81519182156101d6575b6101d391839160808301905261056f565b90565b606092506101c2565b6060915061019b565b60609150610182565b6060915061016a565b506060610161565b60609150610143565b506060610138565b141560011461021e57565b600080fd5b9061022d906102cc565b52565b906102596040808051801561026e575b0192838252818151948015610266575b01825201610381565b9081198111610116570153565b506060610250565b506060610240565b9061029f604080805180156102c4575b01928382528181519480156102bc575b01825201610406565b908119811161011657019060801b815160018060801b0316179052565b506060610296565b506060610286565b6102f460408080518015610309575b0192838252818151948015610301575b01825201610459565b9081198111610116570190565b5060606102eb565b5060606102db565b6102f46040808051801561026e5701928382528181519480156102665701825201610381565b6102f4604080805180156102c45701928382528181519480156102bc5701825201610406565b60009060405180158060011461037957156103755750565b9150565b506060925050565b9060009180516001199182821161011657602081015183811161011657600101600183011092836001146103ef575050506000146103bb57565b60405180156103e7575b80516001600160e01b0316634e487b7160e01b17815260016004820152602490fd5b5060606103c5565b919394508092505190811161011657600101905290565b9060009180516010199182821161011657602081015160011981116101165760010160108301109283600114610442575050506000146103bb57565b919394508092505190811161011657601001905290565b9060009180516020199182821161011657602081015160011981116101165760010160208301109283600114610495575050506000146103bb57565b919394508092505190811161011657602001905290565b6040519081156104c0575b60808201604052565b606091506104b7565b8060005b6002811061050657508103806040036104e557505050565b60016000199160400360031b610100031b0190811990511690825116179052565b82518452602093840193909201916001016104cd565b8060005b60048110610559575081038060800361053857505050565b60016000199160800360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610520565b8060005b6004811061058b575081038060800361053857505050565b8251845260209384019390920191600101610573565b8060005b600281106105bd57508103806040036104e557505050565b82518452602093840193909201916001016105a5565b60405180156105ff575b80516001600160e01b0316634e487b7160e01b17815260116004820152602490fd5b5060606105dd56") </program>
                    <jumpDests> #computeValidJumpDests(#parseByteStack("0x60408051602035916060359160003582358215610123575b83808401801561011b575b01845261002d61035d565b60401981116101165761010b966100e26101069461006987858a6100fd9b6100f4980191821561010d575b8183018252825260208201526104c9565b6100d36100916100af61007a6104ac565b996100836104ac565b506100968b6100918361012c565b61051c565b61009e6104ac565b9283916100a96104ac565b5061012c565b6100b98184610223565b6100c38186610230565b6100cd8188610276565b8a610276565b6100dc876102cc565b51610213565b6100eb85610311565b5160f81c610213565b6100fd83610337565b5160801c610213565b610337565b005b60609250610058565b6105d3565b506060610022565b60609250610017565b6040908151801561020b575b608001908115610202575b602090838301845261015583826105a1565b015182805180156101fa575b019081156101f1575b838201845260008252602082015282519081156101e8575b816101919185820186526105a1565b82519081156101df575b6101af82809460806101b8950187526105a1565b838301906105a1565b81519182156101d6575b6101d391839160808301905261056f565b90565b606092506101c2565b6060915061019b565b60609150610182565b6060915061016a565b506060610161565b60609150610143565b506060610138565b141560011461021e57565b600080fd5b9061022d906102cc565b52565b906102596040808051801561026e575b0192838252818151948015610266575b01825201610381565b9081198111610116570153565b506060610250565b506060610240565b9061029f604080805180156102c4575b01928382528181519480156102bc575b01825201610406565b908119811161011657019060801b815160018060801b0316179052565b506060610296565b506060610286565b6102f460408080518015610309575b0192838252818151948015610301575b01825201610459565b9081198111610116570190565b5060606102eb565b5060606102db565b6102f46040808051801561026e5701928382528181519480156102665701825201610381565b6102f4604080805180156102c45701928382528181519480156102bc5701825201610406565b60009060405180158060011461037957156103755750565b9150565b506060925050565b9060009180516001199182821161011657602081015183811161011657600101600183011092836001146103ef575050506000146103bb57565b60405180156103e7575b80516001600160e01b0316634e487b7160e01b17815260016004820152602490fd5b5060606103c5565b919394508092505190811161011657600101905290565b9060009180516010199182821161011657602081015160011981116101165760010160108301109283600114610442575050506000146103bb57565b919394508092505190811161011657601001905290565b9060009180516020199182821161011657602081015160011981116101165760010160208301109283600114610495575050506000146103bb57565b919394508092505190811161011657602001905290565b6040519081156104c0575b60808201604052565b606091506104b7565b8060005b6002811061050657508103806040036104e557505050565b60016000199160400360031b610100031b0190811990511690825116179052565b82518452602093840193909201916001016104cd565b8060005b60048110610559575081038060800361053857505050565b60016000199160800360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610520565b8060005b6004811061058b575081038060800361053857505050565b8251845260209384019390920191600101610573565b8060005b600281106105bd57508103806040036104e557505050565b82518452602093840193909201916001016105a5565b60405180156105ff575b80516001600160e01b0316634e487b7160e01b17815260116004820152602490fd5b5060606105dd56")) </jumpDests>

                    <id> ACCT_ID </id> // contract owner
                    <caller> CALLER_ID </caller> // who called this contract; in the beginning, origin // msg.sender

                    // todo: gen this part
                    <callData> #buf(32, ARG_0) +Bytes #buf(32, ARG_1) +Bytes #buf(32, ARG_2) +Bytes #buf(32, ARG_3) </callData>

                    <callValue> 0 </callValue>
                    <wordStack> .WordStack => ?_ </wordStack>
                    <localMem> .Bytes => ?_ </localMem>
                    <pc> 0 => ?_ </pc>
                    <gas> #gas(_VGAS) => ?_ </gas>
                    <memoryUsed> 0 => ?_ </memoryUsed>
                    <callGas> _ => ?_ </callGas>

                    <static> false </static> // NOTE: non-static call
                    <callDepth> CALL_DEPTH </callDepth>
                </callState>

                <substate>
                    <selfDestruct> _ </selfDestruct>
                    <log> _ </log>
                    <refund> _ </refund>
                    <accessedAccounts> _ => ?_ </accessedAccounts>
                    <accessedStorage> _ => ?_ </accessedStorage>
                </substate>

                <gasPrice> _ </gasPrice>
                <origin> ORIGIN_ID </origin>

                <blockhashes> _ </blockhashes>
                <block>
                    <previousHash> _ </previousHash>
                    <ommersHash> _ </ommersHash>
                    <coinbase> _ </coinbase>
                    <stateRoot> _ </stateRoot>
                    <transactionsRoot> _ </transactionsRoot>
                    <receiptsRoot> _ </receiptsRoot>
                    <logsBloom> _ </logsBloom>
                    <difficulty> _ </difficulty>
                    <number> _ </number>
                    <gasLimit> _ </gasLimit>
                    <gasUsed> _ </gasUsed>
                    <timestamp> _ </timestamp>
                    <extraData> _ </extraData>
                    <mixHash> _ </mixHash>
                    <blockNonce> _ </blockNonce>
                    <ommerBlockHeaders> _ </ommerBlockHeaders>
                    <baseFee> _ </baseFee>
                </block>
            </evm>

            <network>
                <chainID> _ </chainID>

                <activeAccounts> SetItem(ACCT_ID) _:Set </activeAccounts>

                <accounts>
                    <account>
                        <acctID> ACCT_ID </acctID>
                        <balance> _ </balance>
                        <code> #parseByteStack("0x60408051602035916060359160003582358215610123575b83808401801561011b575b01845261002d61035d565b60401981116101165761010b966100e26101069461006987858a6100fd9b6100f4980191821561010d575b8183018252825260208201526104c9565b6100d36100916100af61007a6104ac565b996100836104ac565b506100968b6100918361012c565b61051c565b61009e6104ac565b9283916100a96104ac565b5061012c565b6100b98184610223565b6100c38186610230565b6100cd8188610276565b8a610276565b6100dc876102cc565b51610213565b6100eb85610311565b5160f81c610213565b6100fd83610337565b5160801c610213565b610337565b005b60609250610058565b6105d3565b506060610022565b60609250610017565b6040908151801561020b575b608001908115610202575b602090838301845261015583826105a1565b015182805180156101fa575b019081156101f1575b838201845260008252602082015282519081156101e8575b816101919185820186526105a1565b82519081156101df575b6101af82809460806101b8950187526105a1565b838301906105a1565b81519182156101d6575b6101d391839160808301905261056f565b90565b606092506101c2565b6060915061019b565b60609150610182565b6060915061016a565b506060610161565b60609150610143565b506060610138565b141560011461021e57565b600080fd5b9061022d906102cc565b52565b906102596040808051801561026e575b0192838252818151948015610266575b01825201610381565b9081198111610116570153565b506060610250565b506060610240565b9061029f604080805180156102c4575b01928382528181519480156102bc575b01825201610406565b908119811161011657019060801b815160018060801b0316179052565b506060610296565b506060610286565b6102f460408080518015610309575b0192838252818151948015610301575b01825201610459565b9081198111610116570190565b5060606102eb565b5060606102db565b6102f46040808051801561026e5701928382528181519480156102665701825201610381565b6102f4604080805180156102c45701928382528181519480156102bc5701825201610406565b60009060405180158060011461037957156103755750565b9150565b506060925050565b9060009180516001199182821161011657602081015183811161011657600101600183011092836001146103ef575050506000146103bb57565b60405180156103e7575b80516001600160e01b0316634e487b7160e01b17815260016004820152602490fd5b5060606103c5565b919394508092505190811161011657600101905290565b9060009180516010199182821161011657602081015160011981116101165760010160108301109283600114610442575050506000146103bb57565b919394508092505190811161011657601001905290565b9060009180516020199182821161011657602081015160011981116101165760010160208301109283600114610495575050506000146103bb57565b919394508092505190811161011657602001905290565b6040519081156104c0575b60808201604052565b606091506104b7565b8060005b6002811061050657508103806040036104e557505050565b60016000199160400360031b610100031b0190811990511690825116179052565b82518452602093840193909201916001016104cd565b8060005b60048110610559575081038060800361053857505050565b60016000199160800360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610520565b8060005b6004811061058b575081038060800361053857505050565b8251845260209384019390920191600101610573565b8060005b600281106105bd57508103806040036104e557505050565b82518452602093840193909201916001016105a5565b60405180156105ff575b80516001600160e01b0316634e487b7160e01b17815260116004820152602490fd5b5060606105dd56") </code>
                        <storage> _ </storage>
                        <origStorage> _ </origStorage>
                        <nonce> _ </nonce>
                    </account>
                </accounts>

                <txOrder> _ </txOrder>
                <txPending> _ </txPending>
                <messages> _ </messages>
            </network>
        </ethereum>
    </kevm>

    requires 0 <=Int ACCT_ID    andBool ACCT_ID    <Int (2 ^Int 160)
        andBool 0  <=Int CALLER_ID  andBool CALLER_ID  <Int (2 ^Int 160)
        andBool 0  <=Int ORIGIN_ID  andBool ORIGIN_ID  <Int (2 ^Int 160)
        andBool 0  <=Int CALL_DEPTH andBool CALL_DEPTH <Int 1024
        andBool 0 <=Int ARG_0 andBool ARG_0 <Int (2 ^Int 256)
andBool 0 <=Int ARG_1 andBool ARG_1 <Int (2 ^Int 8)
andBool 0 <=Int ARG_2 andBool ARG_2 <Int (2 ^Int 128)
andBool 0 <=Int ARG_3 andBool ARG_3 <Int (2 ^Int 128)

endmodule

