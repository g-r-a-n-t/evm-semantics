module INVARIANT-SPEC 
    imports VERIFICATION

    claim

    <kevm>
        <k> #execute => #halt </k>
        <exit-code> 1 </exit-code>
        <mode> NORMAL </mode>
        <schedule> ISTANBUL </schedule>

        <ethereum>
            <evm>
                <output> _ => #buf(0, 0) </output>
                <statusCode> _ => EVMC_SUCCESS </statusCode>
                <callStack> _ </callStack>
                <interimStates> _ </interimStates>
                <touchedAccounts> _ => ?_ </touchedAccounts>

                <callState>
                    // todo: gen this part
                    <program> #parseByteStack("0x602035600035906040805180156100eb575b8180820180156100e3575b01825261002761023a565b602f1981116100de576100d394610061836100c59584602f6100ce96019081156100d5575b818301909252908152601060208201526102ca565b6100bc6100a76100ac6100726102ad565b9561007b6102ad565b5061008e87610089836100f3565b61031d565b6100966102ad565b9283916100a16102ad565b506100f3565b610370565b6100b681846101ea565b866101ea565b6100c58361025e565b5160f81c6101da565b61025e565b005b6060915061004c565b6103d4565b50606061001c565b506060610011565b604090815180156101d2575b6080019081156101c9575b602090838301845261011c83826103a2565b015182805180156101c1575b019081156101b8575b838201845260008252602082015282519081156101af575b816101589185820186526103a2565b82519081156101a6575b610176828094608061017f950187526103a2565b838301906103a2565b815191821561019d575b61019a918391608083019052610370565b90565b60609250610189565b60609150610162565b60609150610149565b60609150610131565b506060610128565b6060915061010a565b5060606100ff565b14156001146101e557565b600080fd5b9060408080518015610232575b019182825281815193801561022a575b018252018051919060011983116100de57600183019052811981116100de570153565b506060610207565b5060606101f7565b60009060405180158060011461025657156102525750565b9150565b506060925050565b604080805180156102a5575b019182825281815193801561029d575b018252018051919060011983116100de57600183019052811981116100de570190565b50606061027a565b50606061026a565b6040519081156102c1575b60808201604052565b606091506102b8565b8060005b6002811061030757508103806040036102e657505050565b60016000199160400360031b610100031b0190811990511690825116179052565b82518452602093840193909201916001016102ce565b8060005b6004811061035a575081038060800361033957505050565b60016000199160800360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610321565b8060005b6004811061038c575081038060800361033957505050565b8251845260209384019390920191600101610374565b8060005b600281106103be57508103806040036102e657505050565b82518452602093840193909201916001016103a6565b6040518015610400575b80516001600160e01b0316634e487b7160e01b17815260116004820152602490fd5b5060606103de56") </program>
                    <jumpDests> #computeValidJumpDests(#parseByteStack("0x602035600035906040805180156100eb575b8180820180156100e3575b01825261002761023a565b602f1981116100de576100d394610061836100c59584602f6100ce96019081156100d5575b818301909252908152601060208201526102ca565b6100bc6100a76100ac6100726102ad565b9561007b6102ad565b5061008e87610089836100f3565b61031d565b6100966102ad565b9283916100a16102ad565b506100f3565b610370565b6100b681846101ea565b866101ea565b6100c58361025e565b5160f81c6101da565b61025e565b005b6060915061004c565b6103d4565b50606061001c565b506060610011565b604090815180156101d2575b6080019081156101c9575b602090838301845261011c83826103a2565b015182805180156101c1575b019081156101b8575b838201845260008252602082015282519081156101af575b816101589185820186526103a2565b82519081156101a6575b610176828094608061017f950187526103a2565b838301906103a2565b815191821561019d575b61019a918391608083019052610370565b90565b60609250610189565b60609150610162565b60609150610149565b60609150610131565b506060610128565b6060915061010a565b5060606100ff565b14156001146101e557565b600080fd5b9060408080518015610232575b019182825281815193801561022a575b018252018051919060011983116100de57600183019052811981116100de570153565b506060610207565b5060606101f7565b60009060405180158060011461025657156102525750565b9150565b506060925050565b604080805180156102a5575b019182825281815193801561029d575b018252018051919060011983116100de57600183019052811981116100de570190565b50606061027a565b50606061026a565b6040519081156102c1575b60808201604052565b606091506102b8565b8060005b6002811061030757508103806040036102e657505050565b60016000199160400360031b610100031b0190811990511690825116179052565b82518452602093840193909201916001016102ce565b8060005b6004811061035a575081038060800361033957505050565b60016000199160800360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610321565b8060005b6004811061038c575081038060800361033957505050565b8251845260209384019390920191600101610374565b8060005b600281106103be57508103806040036102e657505050565b82518452602093840193909201916001016103a6565b6040518015610400575b80516001600160e01b0316634e487b7160e01b17815260116004820152602490fd5b5060606103de56")) </jumpDests>

                    <id> ACCT_ID </id> // contract owner
                    <caller> CALLER_ID </caller> // who called this contract; in the beginning, origin // msg.sender

                    // todo: gen this part
                    <callData> #buf(32, ARG_0) +Bytes #buf(32, ARG_1) </callData>

                    <callValue> 0 </callValue>
                    <wordStack> .WordStack => ?_ </wordStack>
                    <localMem> .Bytes => ?_ </localMem>
                    <pc> 0 => ?_ </pc>
                    <gas> #gas(_VGAS) => ?_ </gas>
                    <memoryUsed> 0 => ?_ </memoryUsed>
                    <callGas> _ => ?_ </callGas>

                    <static> false </static> // NOTE: non-static call
                    <callDepth> CALL_DEPTH </callDepth>
                </callState>

                <substate>
                    <selfDestruct> _ </selfDestruct>
                    <log> _ </log>
                    <refund> _ </refund>
                    <accessedAccounts> _ => ?_ </accessedAccounts>
                    <accessedStorage> _ => ?_ </accessedStorage>
                </substate>

                <gasPrice> _ </gasPrice>
                <origin> ORIGIN_ID </origin>

                <blockhashes> _ </blockhashes>
                <block>
                    <previousHash> _ </previousHash>
                    <ommersHash> _ </ommersHash>
                    <coinbase> _ </coinbase>
                    <stateRoot> _ </stateRoot>
                    <transactionsRoot> _ </transactionsRoot>
                    <receiptsRoot> _ </receiptsRoot>
                    <logsBloom> _ </logsBloom>
                    <difficulty> _ </difficulty>
                    <number> _ </number>
                    <gasLimit> _ </gasLimit>
                    <gasUsed> _ </gasUsed>
                    <timestamp> _ </timestamp>
                    <extraData> _ </extraData>
                    <mixHash> _ </mixHash>
                    <blockNonce> _ </blockNonce>
                    <ommerBlockHeaders> _ </ommerBlockHeaders>
                    <baseFee> _ </baseFee>
                </block>
            </evm>

            <network>
                <chainID> _ </chainID>

                <activeAccounts> SetItem(ACCT_ID) _:Set </activeAccounts>

                <accounts>
                    <account>
                        <acctID> ACCT_ID </acctID>
                        <balance> _ </balance>
                        <code> #parseByteStack("0x602035600035906040805180156100eb575b8180820180156100e3575b01825261002761023a565b602f1981116100de576100d394610061836100c59584602f6100ce96019081156100d5575b818301909252908152601060208201526102ca565b6100bc6100a76100ac6100726102ad565b9561007b6102ad565b5061008e87610089836100f3565b61031d565b6100966102ad565b9283916100a16102ad565b506100f3565b610370565b6100b681846101ea565b866101ea565b6100c58361025e565b5160f81c6101da565b61025e565b005b6060915061004c565b6103d4565b50606061001c565b506060610011565b604090815180156101d2575b6080019081156101c9575b602090838301845261011c83826103a2565b015182805180156101c1575b019081156101b8575b838201845260008252602082015282519081156101af575b816101589185820186526103a2565b82519081156101a6575b610176828094608061017f950187526103a2565b838301906103a2565b815191821561019d575b61019a918391608083019052610370565b90565b60609250610189565b60609150610162565b60609150610149565b60609150610131565b506060610128565b6060915061010a565b5060606100ff565b14156001146101e557565b600080fd5b9060408080518015610232575b019182825281815193801561022a575b018252018051919060011983116100de57600183019052811981116100de570153565b506060610207565b5060606101f7565b60009060405180158060011461025657156102525750565b9150565b506060925050565b604080805180156102a5575b019182825281815193801561029d575b018252018051919060011983116100de57600183019052811981116100de570190565b50606061027a565b50606061026a565b6040519081156102c1575b60808201604052565b606091506102b8565b8060005b6002811061030757508103806040036102e657505050565b60016000199160400360031b610100031b0190811990511690825116179052565b82518452602093840193909201916001016102ce565b8060005b6004811061035a575081038060800361033957505050565b60016000199160800360031b610100031b0190811990511690825116179052565b8251845260209384019390920191600101610321565b8060005b6004811061038c575081038060800361033957505050565b8251845260209384019390920191600101610374565b8060005b600281106103be57508103806040036102e657505050565b82518452602093840193909201916001016103a6565b6040518015610400575b80516001600160e01b0316634e487b7160e01b17815260116004820152602490fd5b5060606103de56") </code>
                        <storage> _ </storage>
                        <origStorage> _ </origStorage>
                        <nonce> _ </nonce>
                    </account>
                </accounts>

                <txOrder> _ </txOrder>
                <txPending> _ </txPending>
                <messages> _ </messages>
            </network>
        </ethereum>
    </kevm>

    requires 0 <=Int ACCT_ID    andBool ACCT_ID    <Int (2 ^Int 160)
        andBool 0  <=Int CALLER_ID  andBool CALLER_ID  <Int (2 ^Int 160)
        andBool 0  <=Int ORIGIN_ID  andBool ORIGIN_ID  <Int (2 ^Int 160)
        andBool 0  <=Int CALL_DEPTH andBool CALL_DEPTH <Int 1024
        andBool 0 <=Int ARG_0 andBool ARG_0 <Int (2 ^Int 8)
andBool 0 <=Int ARG_1 andBool ARG_1 <Int (2 ^Int 8)

endmodule

